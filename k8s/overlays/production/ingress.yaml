apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: stellar-hummingbot-connector-ingress
  annotations:
    # Ingress class
    kubernetes.io/ingress.class: "nginx"
    
    # SSL/TLS configuration
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-protocols: "TLSv1.2 TLSv1.3"
    
    # Security headers
    nginx.ingress.kubernetes.io/add-headers: |
      X-Frame-Options: DENY
      X-Content-Type-Options: nosniff
      X-XSS-Protection: 1; mode=block
      Strict-Transport-Security: max-age=31536000; includeSubDomains
      Content-Security-Policy: default-src 'self'
    
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    
    # Request size limits
    nginx.ingress.kubernetes.io/proxy-body-size: "1m"
    
    # Connection and timeout settings
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "120"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "120"
    
    # Load balancing
    nginx.ingress.kubernetes.io/upstream-hash-by: "$request_uri"
    nginx.ingress.kubernetes.io/load-balance: "round_robin"
    
    # Health checks
    nginx.ingress.kubernetes.io/health-check-path: "/health/ready"
    nginx.ingress.kubernetes.io/health-check-interval: "30s"
    
    # Monitoring annotations
    prometheus.io/scrape: "true"
    prometheus.io/port: "10254"
    prometheus.io/path: "/metrics"
spec:
  tls:
  - hosts:
    - api.stellar-hummingbot.com
    - metrics.stellar-hummingbot.com
    secretName: stellar-tls-secret
  rules:
  # Main API endpoint
  - host: api.stellar-hummingbot.com
    http:
      paths:
      - path: /health
        pathType: Prefix
        backend:
          service:
            name: stellar-hummingbot-connector-service
            port:
              number: 8080
      - path: /metrics
        pathType: Prefix
        backend:
          service:
            name: stellar-hummingbot-connector-service
            port:
              number: 8000
  # Metrics-specific endpoint
  - host: metrics.stellar-hummingbot.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: stellar-hummingbot-connector-service
            port:
              number: 8000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: stellar-monitoring-ingress
  namespace: stellar-monitoring
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    
    # Authentication for monitoring services
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: monitoring-basic-auth
    nginx.ingress.kubernetes.io/auth-realm: "Stellar Monitoring - Authentication Required"
    
    # Additional security for monitoring
    nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,192.168.0.0/16,172.16.0.0/12"
    nginx.ingress.kubernetes.io/rate-limit: "50"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
spec:
  tls:
  - hosts:
    - prometheus.stellar-hummingbot.com
    - grafana.stellar-hummingbot.com
    - alertmanager.stellar-hummingbot.com
    secretName: monitoring-tls-secret
  rules:
  # Prometheus
  - host: prometheus.stellar-hummingbot.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: prometheus-service
            port:
              number: 9090
  # Grafana
  - host: grafana.stellar-hummingbot.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: grafana-service
            port:
              number: 3000
  # Alertmanager
  - host: alertmanager.stellar-hummingbot.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: alertmanager-service
            port:
              number: 9093
---
apiVersion: v1
kind: Secret
metadata:
  name: monitoring-basic-auth
  namespace: stellar-monitoring
type: Opaque
data:
  # admin:$2y$10$2b2cU8CPhOTaGrs1HRQuAueS7JTT5ZHsHSzYiFPm1leZck7Mc8T4W (password: secret)
  auth: YWRtaW46JDJ5JDEwJDJiMmNVOENQaE9UYUdyczFIUlF1QXVlUzdKVFQ1WkhzSFN6WWlGUG0xbGVaY2s3TWM4VDRXCg==
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: ingress-network-policy
spec:
  podSelector:
    matchLabels:
      app: stellar-hummingbot-connector
  policyTypes:
  - Ingress
  ingress:
  # Allow traffic from ingress controller
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8000
    - protocol: TCP
      port: 8080
  # Allow traffic from monitoring namespace
  - from:
    - namespaceSelector:
        matchLabels:
          name: stellar-monitoring
    ports:
    - protocol: TCP
      port: 8000